syntax = "proto3";
package ET;

//ResponseType L2C_RoomListInLobby
message C2L_RoomListInLobby // IActorRequest
{
  int32 RpcId = 90;
}

message L2C_RoomListInLobby // IActorResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  repeated RoomInfoProto RoomList = 1;
}

///////////////////////////////// 房间相关  START ///////////////////////////////////
//房间配置数据.按需扩展
message RoomConfigProto
{
  string RoomName = 1;
  int32 RoomPlayerNum = 2;
}
message RoomInfoProto
{
  int64 RoomId = 1;
  RoomConfigProto RoomConfig = 2;
  int64 RoomHolderPlayer = 3;
  int32 PlayerCount = 4;
  bool IsGameing = 5;
}
//ResponseType L2C_CreateNewRoomLobby
message C2L_CreateNewRoomLobby // IActorRequest
{
  int32 RpcId = 90;
}

message L2C_CreateNewRoomLobby // IActorResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  RoomInfoProto RoomInfo = 1;
  repeated PlayerInfoRoom playerInfoRoom = 2;
}

//ResponseType L2C_JoinRoomLobby
message C2L_JoinRoomLobby // IRequest
{
  int32 RpcId = 90;
  int64 RoomId = 2; //加入的房间Id
}

message L2C_JoinRoomLobby // IActorResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  RoomInfoProto RoomInfo = 1;
  repeated PlayerInfoRoom playerInfoRoom = 2;
  int64 RoomPlayerActorId = 3;
}

message PlayerInfoRoom
{
  string Name = 1;
  int32 camp = 2;
  int64 playerid = 3;
}

message L2C_PlayerTriggerRoom // IActorMessage
{
  PlayerInfoRoom playerInfoRoom = 1;
  bool JoinOrLeave = 2;
  int64 newRoomHolder = 3; //更换房主的时候选的新房主
  bool IsDestory = 4;
}
//房间关闭
message L2C_RoomClose // IActorMessage
{
  int32 CloseCode = 1;
}
//ResponseType L2C_LeaveRoomLobby
message C2L_LeaveRoomLobby // IRoomRequest
{
  int32 RpcId = 90;
}

message L2C_LeaveRoomLobby // IRoomResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
}


message PlayerBattleInfo
{
  int64 PlayerId = 1;
  int32 HeroConfig = 2;
}

//ResponseType L2C_StartGameLobby
message C2L_StartGameLobby // IRoomRequest
{
  int32 RpcId = 90;
}

message L2C_StartGameLobby // IRoomResponse
{
  int32 RpcId = 90;
  int32 Error = 91;
  string Message = 92;
  repeated int64 list = 1;
}

message PlayerBattlePoint
{
  int64 PlayerId = 1;
  int32 Point = 2;
  int32 SingleMatchCount = 3;
  string Account = 4;
  int64 UnitId = 5;
}

message L2C_PrepareToEnterBattle  // IActorMessage
{
}

message C2L_PreparedToEnterBattle // IRoomMessage
{
  int64 PlayerId = 1;
}

message L2C_AllowToEnterMap // IActorMessage
{

}